@{
    ViewData["Title"] = "";
}
@model List<AppointmentViewModel>

<div class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary"><i class="bi bi-calendar-week"></i> Appointments</h2>
        <a class="btn btn-primary shadow-sm px-4" asp-action="CreateAppointment" asp-controller="Appointment">
            <i class="bi bi-plus-circle"></i> Add Appointment
        </a>
    </div>

    <!-- 🔍 Filters Section -->
    <div class="card shadow-sm border-0 mb-4 rounded-4">
        <div class="card-body">
            <div class="row g-3 align-items-center">
                <!-- Search Type -->
                <div class="col-md-3">
                    <label class="form-label fw-semibold">Search by</label>
                    <select id="searchType" class="form-select">
                        <option value="patient">Patient Name</option>
                        <option value="doctor">Doctor Name</option>
                    </select>
                </div>

                <!-- Search Input -->
                <div class="col-md-5">
                    <label class="form-label fw-semibold">Keyword</label>
                    <input type="text" class="form-control" placeholder="Type to search..." id="searchInput" />
                </div>

                <!-- Status Filter -->
                <div class="col-md-3">
                    <label class="form-label fw-semibold">Filter by Status</label>
                    <select id="statusFilter" class="form-select">
                        <option value="all">All</option>
                        <option value="Scheduled">Scheduled</option>
                        <option value="Completed">Completed</option>
                        <option value="Canceled">Canceled</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- 🧾 Appointments Table -->
    <div class="table-responsive shadow-sm rounded-4">
        <table class="table table-hover align-middle mb-0">
            <thead class="table-primary text-white">
                <tr>
                    <th>#</th>
                    <th>Patient</th>
                    <th>Doctor</th>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Status</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody id="appointmentTable" class="bg-light">
                @if (Model != null && Model.Any())
                {
                    int index = 1;
                    foreach (var appointment in Model)
                    {
                        <tr data-status="@appointment.Status"
                            data-patient="@appointment.PatientName.ToLower()"
                            data-doctor="@appointment.DoctorName.ToLower()">
                            <td>@index</td>
                            <td>@appointment.PatientName</td>
                            <td>@appointment.DoctorName</td>
                            <td>@appointment.AppointmentDateOnly?.ToString("yyyy-MM-dd")</td>
                            <td>@appointment.AppointmentTimeOnly?.ToString(@"hh\:mm")</td>
                            <td>
                                <span class="badge
                                                    @(appointment.Status == "Scheduled" ? "bg-info" :
                                                                                                                  appointment.Status == "Completed" ? "bg-success" :
                                                                                                                  appointment.Status == "Canceled" ? "bg-danger" : "bg-secondary") px-3 py-2">
                            @appointment.Status
                        </span>
                    </td>
                    <td class="text-center">
                        <a class="btn btn-outline-success btn-sm me-2"
                           asp-action="ViewAppointment"
                           asp-route-id="@appointment.AppointmentId">
                            <i class="bi bi-eye"></i> View
                        </a>
                        <a class="btn btn-outline-primary btn-sm me-2"
                           asp-action="EditAppointment"
                           asp-route-id="@appointment.AppointmentId">
                            <i class="bi bi-pencil"></i> Edit
                        </a>

                                <form asp-action="DeleteAppointment" asp-route-id="@appointment.AppointmentId"
                                      method="post" style="display:inline;"
                                      onsubmit="return confirmDelete(event);">
                                    <button class="btn btn-outline-danger btn-sm">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                                index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted py-4">No appointments found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- 🧠 JS for Filter & Search -->
<script>
    const searchInput = document.getElementById("searchInput");
    const searchType = document.getElementById("searchType");
    const statusFilter = document.getElementById("statusFilter");
    const rows = document.querySelectorAll("#appointmentTable tr");

    function applyFilters() {
        const keyword = searchInput.value.toLowerCase();
        const type = searchType.value;
        const status = statusFilter.value;

        rows.forEach(row => {
            const matchesKeyword = row.dataset[type]?.includes(keyword);
            const matchesStatus = (status === "all" || row.dataset.status === status);
            row.style.display = (matchesKeyword && matchesStatus) ? "" : "none";
        });
    }

    searchInput.addEventListener("keyup", applyFilters);
    searchType.addEventListener("change", applyFilters);
    statusFilter.addEventListener("change", applyFilters);
</script>

@if (TempData["ShowDeleteToast"] != null)
{
    <script>
        window.onload = function() {
            const toast = new bootstrap.Toast(document.getElementById("deleteToast"));
            toast.show();
        }

    </script>
}

@await Html.PartialAsync("_ConfirmDelete")
@await Html.PartialAsync("_ToastNotification")
